
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x9f[Y\x8e{\xb8\xb1\xff\x11\xd0\xdd\x99\x08M/e'
    
_lr_action_items = {'AND':([2,3,4,5,7,8,15,16,17,18,19,20,21,22,],[-10,9,-9,-12,-11,9,-2,-1,-8,9,9,9,9,9,]),'LPAR':([0,1,6,9,10,11,12,13,14,],[1,1,1,1,1,1,1,1,1,]),'FALSE':([0,1,6,9,10,11,12,13,14,],[2,2,2,2,2,2,2,2,2,]),'RPAR':([2,4,5,7,8,15,16,17,18,19,20,21,22,],[-10,-9,-12,-11,16,-2,-1,-8,-4,-3,-5,-7,-6,]),'IFF':([2,3,4,5,7,8,15,16,17,18,19,20,21,22,],[-10,10,-9,-12,-11,10,-2,-1,-8,-4,10,-5,-7,-6,]),'EQL':([2,3,4,5,7,8,15,16,17,18,19,20,21,22,],[-10,11,-9,-12,-11,11,-2,-1,-8,-4,-3,-5,-7,-6,]),'ATOM':([0,1,6,9,10,11,12,13,14,],[5,5,5,5,5,5,5,5,5,]),'NOT':([0,1,6,9,10,11,12,13,14,],[6,6,6,6,6,6,6,6,6,]),'FI':([2,3,4,5,7,8,15,16,17,18,19,20,21,22,],[-10,12,-9,-12,-11,12,-2,-1,-8,12,12,-5,-7,-6,]),'IF':([2,3,4,5,7,8,15,16,17,18,19,20,21,22,],[-10,14,-9,-12,-11,14,-2,-1,-8,14,14,-5,-7,-6,]),'TRUE':([0,1,6,9,10,11,12,13,14,],[7,7,7,7,7,7,7,7,7,]),'OR':([2,3,4,5,7,8,15,16,17,18,19,20,21,22,],[-10,13,-9,-12,-11,13,-2,-1,-8,13,13,13,-7,13,]),'$end':([2,3,4,5,7,15,16,17,18,19,20,21,22,],[-10,0,-9,-12,-11,-2,-1,-8,-4,-3,-5,-7,-6,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr':([0,1,6,9,10,11,12,13,14,],[3,8,15,17,18,19,20,21,22,]),'literal':([0,1,6,9,10,11,12,13,14,],[4,4,4,4,4,4,4,4,4,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> LPAR expr RPAR','expr',3,'p_expr_paren','parser.py',14),
  ('expr -> NOT expr','expr',2,'p_expr_unary','parser.py',18),
  ('expr -> expr EQL expr','expr',3,'p_expr_binop','parser.py',22),
  ('expr -> expr IFF expr','expr',3,'p_expr_binop','parser.py',23),
  ('expr -> expr FI expr','expr',3,'p_expr_binop','parser.py',24),
  ('expr -> expr IF expr','expr',3,'p_expr_binop','parser.py',25),
  ('expr -> expr OR expr','expr',3,'p_expr_binop','parser.py',26),
  ('expr -> expr AND expr','expr',3,'p_expr_binop','parser.py',27),
  ('expr -> literal','expr',1,'p_expr_literal','parser.py',32),
  ('literal -> FALSE','literal',1,'p_literal','parser.py',36),
  ('literal -> TRUE','literal',1,'p_literal','parser.py',37),
  ('literal -> ATOM','literal',1,'p_literal','parser.py',38),
]
